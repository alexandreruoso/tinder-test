name: CI

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    quality-checks:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: 'npm'

            # - name: Install Dependencies
            #   run: npm ci

            - name: Validate Environment Files
              run: node scripts/validate-env.js

            - name: Type Check
              run: npx tsc --noEmit

            - name: Lint Code
              run: npm run lint

            - name: Run Tests with Coverage
              run: npm run test:coverage

            # - name: Build Application
            #   run: npm run build

            # - name: Build Storybook
            #   run: npm run build-storybook

            # Optional: E2E Tests
            # - name: Install Playwright Browsers
            #   run: npx playwright install --with-deps

            # - name: Run E2E Tests
            #   run: npx playwright test

    build-and-push:
        runs-on: ubuntu-latest
        needs: quality-checks
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and Push Docker Image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Scan Image with Grype
              uses: anchore/scan-action@v3
              with:
                  image: ghcr.io/${{ github.repository }}:${{ github.sha }}
                  fail-build: true
                  severity-cutoff: high

            - name: Upload Coverage Reports
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage/lcov.info
                  flags: unittests
                  name: codecov-umbrella
